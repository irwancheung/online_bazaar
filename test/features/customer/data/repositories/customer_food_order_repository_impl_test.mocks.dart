// Mocks generated by Mockito 5.4.1 from annotations
// in online_bazaar/test/features/customer/data/repositories/customer_food_order_repository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;
import 'dart:ui' as _i2;

import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:screenshot/screenshot.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeImage_0 extends _i1.SmartFake implements _i2.Image {
  _FakeImage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ScreenshotController].
///
/// See the documentation for Mockito's code generation for more information.
class MockScreenshotController extends _i1.Mock
    implements _i3.ScreenshotController {
  @override
  _i4.Future<String?> captureAndSave(
    String? directory, {
    String? fileName,
    double? pixelRatio,
    Duration? delay = const Duration(milliseconds: 20),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureAndSave,
          [directory],
          {
            #fileName: fileName,
            #pixelRatio: pixelRatio,
            #delay: delay,
          },
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<_i5.Uint8List?> capture({
    double? pixelRatio,
    Duration? delay = const Duration(milliseconds: 20),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #capture,
          [],
          {
            #pixelRatio: pixelRatio,
            #delay: delay,
          },
        ),
        returnValue: _i4.Future<_i5.Uint8List?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.Uint8List?>.value(),
      ) as _i4.Future<_i5.Uint8List?>);
  @override
  _i4.Future<_i2.Image?> captureAsUiImage({
    double? pixelRatio = 1.0,
    Duration? delay = const Duration(milliseconds: 20),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureAsUiImage,
          [],
          {
            #pixelRatio: pixelRatio,
            #delay: delay,
          },
        ),
        returnValue: _i4.Future<_i2.Image?>.value(),
        returnValueForMissingStub: _i4.Future<_i2.Image?>.value(),
      ) as _i4.Future<_i2.Image?>);
  @override
  _i4.Future<_i5.Uint8List> captureFromWidget(
    _i6.Widget? widget, {
    Duration? delay = const Duration(seconds: 1),
    double? pixelRatio,
    _i6.BuildContext? context,
    _i2.Size? targetSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureFromWidget,
          [widget],
          {
            #delay: delay,
            #pixelRatio: pixelRatio,
            #context: context,
            #targetSize: targetSize,
          },
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);
  @override
  _i4.Future<_i5.Uint8List> captureFromLongWidget(
    _i6.Widget? widget, {
    Duration? delay = const Duration(seconds: 1),
    double? pixelRatio,
    _i6.BuildContext? context,
    _i6.BoxConstraints? constraints,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureFromLongWidget,
          [widget],
          {
            #delay: delay,
            #pixelRatio: pixelRatio,
            #context: context,
            #constraints: constraints,
          },
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);
  @override
  _i4.Future<_i2.Image> longWidgetToUiImage(
    _i6.Widget? widget, {
    Duration? delay = const Duration(seconds: 1),
    double? pixelRatio,
    _i6.BuildContext? context,
    _i6.BoxConstraints? constraints =
        const _i6.BoxConstraints(maxHeight: 1.7976931348623157e+308),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #longWidgetToUiImage,
          [widget],
          {
            #delay: delay,
            #pixelRatio: pixelRatio,
            #context: context,
            #constraints: constraints,
          },
        ),
        returnValue: _i4.Future<_i2.Image>.value(_FakeImage_0(
          this,
          Invocation.method(
            #longWidgetToUiImage,
            [widget],
            {
              #delay: delay,
              #pixelRatio: pixelRatio,
              #context: context,
              #constraints: constraints,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Image>.value(_FakeImage_0(
          this,
          Invocation.method(
            #longWidgetToUiImage,
            [widget],
            {
              #delay: delay,
              #pixelRatio: pixelRatio,
              #context: context,
              #constraints: constraints,
            },
          ),
        )),
      ) as _i4.Future<_i2.Image>);
}
